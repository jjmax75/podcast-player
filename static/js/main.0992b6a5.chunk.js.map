{"version":3,"sources":["components/search-form.js","components/results/item.js","utils/truncate-string.js","components/results/list.js","screens/search.js","screens/podcast.js","components/layout/footer.js","components/layout/header.js","components/layout/main.js","app.js","index.js"],"names":["SearchForm","handleKeyPress","useState","searchTerm","setSearchTerm","className","type","placeholder","value","onChange","e","target","onKeyPress","ResultItem","str","len","podcast","setSelectedPodcast","onClick","id","src","thumbnail","title_original","description_original","length","slice","class","publisher_original","explicit_content","Date","latest_pub_date_ms","toLocaleDateString","ResultList","podcasts","map","Search","setPodcasts","getPodcasts","a","preventDefault","options","headers","process","fetch","result","json","parsed","results","key","Podcast","podcastDetails","setPodcastDetails","audio","setAudio","useEffect","fetchData","episodes","title","controls","Footer","Header","Main","children","App","selectedPodcast","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0992b6a5.chunk.js","sourcesContent":["import './search-form.css';\n\nimport React, { useState } from 'react';\n\nexport const SearchForm = ({ handleKeyPress }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  return (\n    <form>\n      <input\n        className='search-box'\n        type='text'\n        placeholder='Search for a podcast'\n        value={searchTerm}\n        onChange={e => setSearchTerm(e.target.value)}\n        onKeyPress={e => handleKeyPress(e)}\n      />\n    </form>\n)};\n","import './item.css';\n\nimport React from 'react';\n\nimport { truncateString } from '../../utils/truncate-string';\n\nexport const ResultItem = ({ podcast, setSelectedPodcast }) => (\n    <li\n      className='result-item'\n      onClick={() => setSelectedPodcast(podcast.id)}\n      key={podcast.id}\n    >\n      <img className='podcast-thumbnail' src={podcast.thumbnail} />\n      <div className='podcast-details'>\n        <h3 className='podcast-title'>{podcast.title_original}</h3>\n        <div className='podcast-description'>\n          {truncateString(podcast.description_original, 250)}\n        </div>\n        <div class='podcast-meta'>\n          <span>Published by: {podcast.publisher_original} | </span>\n          {podcast.explicit_content && <span>Explicit | </span>}\n          <span>Last updated: {new Date(podcast.latest_pub_date_ms).toLocaleDateString()}</span>\n        </div>\n      </div>\n    </li>\n);\n","export const truncateString = (str, len) => {\n  if (str.length <= len) {\n    return str;\n  }\n\n  return str.slice(0, len - 3) + '...';\n}\n","import './list.css';\n\nimport React from 'react';\n\nimport { ResultItem } from './item';\n\nexport const ResultList = ({ podcasts, setSelectedPodcast }) => (\n  <ul className='result-list'>\n    { \n      podcasts.map(podcast => \n        <ResultItem podcast={podcast} setSelectedPodcast={setSelectedPodcast} />)\n    }\n  </ul>\n);\n","import React, { useState } from 'react';\n\nimport { SearchForm } from '../components/search-form';\nimport { ResultList } from '../components/results/list';\n\nconst listenNotesApiUrl = 'https://listen-api.listennotes.com/api/v2';\n\nconst Search = ({ setSelectedPodcast }) => {\n  const [podcasts, setPodcasts] = useState([]);\n\n  const getPodcasts = async (e) => {\n    e.preventDefault();\n    const options = {\n      headers: {\n        'X-ListenAPI-Key': process.env.REACT_APP_LISTEN_NOTES_API_KEY,\n      }\n    };\n\n    const result = await fetch(`${listenNotesApiUrl}/search?q=${e.target.value}&sort_by_date=0&type=podcast`, options);\n    const parsed = await result.json();\n    \n    setPodcasts(parsed.results);\n  }\n\n  const handleKeyPress = e => {\n    if(e.key === 'Enter'){\n      e.preventDefault();\n      getPodcasts(e);\n    }\n  }\n\n  return (\n    <>\n      <h3>Welcome!</h3>\n      <h1>Explore top podcasts</h1>\n      <SearchForm handleKeyPress={handleKeyPress} />\n      <ResultList setSelectedPodcast={setSelectedPodcast} podcasts={podcasts} />\n    </>\n  )\n}\n\nexport default Search;\n","import React, { useEffect, useState } from 'react';\n\nconst listenNotesApiUrl = 'https://listen-api.listennotes.com/api/v2';\n\nconst Podcast = ({ id, setSelectedPodcast }) => {\n  const [podcastDetails, setPodcastDetails] = useState({});\n  const [audio, setAudio] = useState();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const options = {\n        headers: {\n          'X-ListenAPI-Key': process.env.REACT_APP_LISTEN_NOTES_API_KEY,\n        }\n      };\n\n      const result = await fetch(`${listenNotesApiUrl}/podcasts/${id}`, options);\n      const parsed = await result.json();\n\n      setPodcastDetails(parsed);\n    }\n    \n    fetchData();\n  }, [id]);\n\n  const renderEpisodeList = () => (\n    podcastDetails.episodes.map(({ audio, id, title }) => (\n      <li key={id} onClick={() => setAudio(audio)}>{title}</li>\n    ))\n  )\n\n\n  return (\n    <>\n      <button onClick={() => setSelectedPodcast(null)}>Back</button>\n      { podcastDetails.episodes ?\n        <ul>\n          {renderEpisodeList()}\n        </ul>\n      :\n        <span>The podcast list is loading</span>\n      }\n      { audio &&\n        <audio\n          controls\n          src={audio}>\n            Your browser does not support the\n            <code>audio</code> element.\n        </audio>\n      }\n    </>\n  )\n}\n\nexport default Podcast;\n","import './footer.css';\n\nimport React from 'react';\n\nexport const Footer = () => {\n  return (\n    <footer className='footer'>Powered by Listen Notes</footer>\n  );\n};\n","import './header.css';\n\nimport React from 'react';\n\nexport const Header = () => {\n  return (\n    <header className='header'>Podcast Player</header>\n  );\n};\n","import './main.css';\n\nimport React from 'react';\n\nexport const Main = ({ children }) => {\n  return (\n    <main className='main-content'>\n      { children }\n    </main>\n  );\n};\n","import React, {useState} from 'react';\n\nimport Search from './screens/search';\nimport Podcast from './screens/podcast';\nimport { Footer, Header, Main } from './components/layout';\n\nconst App = () => {\n  const [selectedPodcast, setSelectedPodcast] = useState();\n  return (\n    <>\n      <Header />\n      <Main>\n        { selectedPodcast\n          ? <Podcast id={selectedPodcast} setSelectedPodcast={setSelectedPodcast} />\n          : <Search setSelectedPodcast={setSelectedPodcast} />\n        }\n      </Main>\n      <Footer />\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}